[{"C:\\Git\\react-tests\\src\\index.js":"1","C:\\Git\\react-tests\\src\\reportWebVitals.js":"2","C:\\Git\\react-tests\\src\\redux\\store.ts":"3","C:\\Git\\react-tests\\src\\layouts\\main-layout.tsx":"4","C:\\Git\\react-tests\\src\\redux\\root-reducer.ts":"5","C:\\Git\\react-tests\\src\\pages\\github-repos\\github-repos.tsx":"6","C:\\Git\\react-tests\\src\\redux\\containers\\github-repos\\with-github-repos.tsx":"7","C:\\Git\\react-tests\\src\\redux\\reducers\\github-repos.ts":"8","C:\\Git\\react-tests\\src\\redux\\actions\\req-status.ts":"9","C:\\Git\\react-tests\\src\\redux\\actions\\github-repos.ts":"10","C:\\Git\\react-tests\\src\\redux\\utils\\api.js":"11","C:\\Git\\react-tests\\src\\redux\\root-saga.ts":"12","C:\\Git\\react-tests\\src\\redux\\sagas\\github-repos.ts":"13","C:\\Git\\react-tests\\src\\redux\\reducers\\req-status.ts":"14","C:\\Git\\react-tests\\src\\redux\\root-action.ts":"15","C:\\Git\\react-tests\\src\\redux\\types\\github-repos.ts":"16"},{"size":654,"mtime":1608402950204,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":475,"mtime":1608499894752,"results":"20","hashOfConfig":"18"},{"size":492,"mtime":1608228983821,"results":"21","hashOfConfig":"18"},{"size":364,"mtime":1608501417701,"results":"22","hashOfConfig":"18"},{"size":337,"mtime":1608405296187,"results":"23","hashOfConfig":"18"},{"size":1629,"mtime":1608501417697,"results":"24","hashOfConfig":"18"},{"size":823,"mtime":1608501417705,"results":"25","hashOfConfig":"18"},{"size":445,"mtime":1608227912225,"results":"26","hashOfConfig":"18"},{"size":868,"mtime":1608498300955,"results":"27","hashOfConfig":"18"},{"size":953,"mtime":1608316726347,"results":"28","hashOfConfig":"18"},{"size":241,"mtime":1608316726341,"results":"29","hashOfConfig":"18"},{"size":987,"mtime":1608500855251,"results":"30","hashOfConfig":"18"},{"size":553,"mtime":1608227912266,"results":"31","hashOfConfig":"18"},{"size":88,"mtime":1608491151417,"results":"32","hashOfConfig":"18"},{"size":1473,"mtime":1608500175032,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"g7hfl4",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Git\\react-tests\\src\\index.js",[],["72","73"],"C:\\Git\\react-tests\\src\\reportWebVitals.js",[],"C:\\Git\\react-tests\\src\\redux\\store.ts",[],"C:\\Git\\react-tests\\src\\layouts\\main-layout.tsx",[],["74","75"],"C:\\Git\\react-tests\\src\\redux\\root-reducer.ts",[],"C:\\Git\\react-tests\\src\\pages\\github-repos\\github-repos.tsx",[],"C:\\Git\\react-tests\\src\\redux\\containers\\github-repos\\with-github-repos.tsx",["76"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\n// import {reqStatusAction} from '../../actions/req-status';\r\nimport * as actions from \"../../actions/github-repos\";\r\nimport {githubReposTProps, withGithubReposTProps} from \"../../types/github-repos\";\r\nimport {RootState} from \"MyTypes\"\r\nimport {AppState} from \"../../root-reducer\";\r\n\r\nexport const withGithubRepos = <P extends object> (ChildComponent: React.ComponentType<P>) => {\r\n    class GithubReposContainer extends React.PureComponent <withGithubReposTProps> {\r\n\r\n        componentDidMount = () => {\r\n            this._init();\r\n        }\r\n\r\n        render = () => {\r\n            const {githubRepos} = this.props;\r\n            const props = {\r\n                githubRepos\r\n            };\r\n            return <ChildComponent {...props as P}/>;\r\n        }\r\n\r\n        _init = () => {\r\n            console.log(this.props, 'this.props')\r\n            this.props.fetchOrganizationRepositories(\"adobe123\")\r\n        }\r\n    }\r\n\r\n    const mapDispatchToProps = (dispatch: any) => {\r\n        return {\r\n            // setReqStatus: (isFetching: any) => dispatch(reqStatusAction(isFetching))\r\n            fetchOrganizationRepositories: (organization: string) => dispatch(actions.fetchOrganizationRepositoriesAction(organization))\r\n        };\r\n    };\r\n\r\n    const mapStateToProps = (store: AppState) => {\r\n        return {\r\n            reqStatus: store.reqStatus,\r\n            githubRepos: store.githubRepos\r\n        };\r\n    };\r\n\r\n    return connect<P, ReturnType<typeof mapStateToProps>>(mapStateToProps, mapDispatchToProps)(GithubReposContainer);\r\n};\r\n","C:\\Git\\react-tests\\src\\redux\\reducers\\github-repos.ts",["77","78","79","80"],"import * as githubReposActions from '../actions/github-repos';\r\nimport {InitialStateGithubReposType, REDUCER_ACTION, RepoItemType} from \"../types/github-repos\";\r\nimport {combineReducers} from \"redux\";\r\nimport * as actions from './../actions/github-repos';\r\nimport {ActionType} from \"typesafe-actions\";\r\nimport {GithubRepos} from \"../../pages/github-repos/github-repos\";\r\n\r\ntype GithubReposAction = ActionType<typeof actions>;\r\n\r\ninterface State {\r\n    repositoryList: Array<RepoItemType>\r\n}\r\n\r\ntype GithubReposState = Readonly<{\r\n    repositoryList: Array<RepoItemType>\r\n}>\r\n\r\nconst initialState: GithubReposState = {\r\n    repositoryList: []\r\n}\r\n\r\nexport const githubReposReducer = (state = initialState, action: GithubReposAction) => {\r\n    switch (action.type) {\r\n        case githubReposActions.RECEIVE_ORGANIZATION_REPOSITORIES: {\r\n            return <State[\"repositoryList\"]> {...state, repositoryList: action.payload};\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n","C:\\Git\\react-tests\\src\\redux\\actions\\req-status.ts",[],"C:\\Git\\react-tests\\src\\redux\\actions\\github-repos.ts",["81","82","83","84"],"import {call, put} from 'redux-saga/effects'\r\nimport {ACTIONS_GET_ORGANIZATION_REPOSITORIES, RepoItemType} from \"../types/github-repos\";\r\nimport {fetchOrganizationRepositoriesApi} from \"../utils/api\";\r\nimport * as actions from \"../types/github-repos\";\r\n\r\n// export const FETCH_ORGANIZATION_REPOSITORIES = \"FETCH_ORGANIZATION_REPOSITORIES\";\r\n// export const RECEIVE_ORGANIZATION_REPOSITORIES = \"RECEIVE_ORGANIZATION_REPOSITORIES\";\r\n\r\nexport function fetchOrganizationRepositoriesAction(organization: string): actions.FetchReposAction {\r\n    return {\r\n        type: actions.FETCH_ORGANIZATION_REPOSITORIES,\r\n        payload: organization\r\n    }\r\n}\r\n\r\nexport function receiveOrganizationRepositoriesAction(repos: Array<RepoItemType>): actions.ReceiveReposAction {\r\n    return {\r\n        type: actions.RECEIVE_ORGANIZATION_REPOSITORIES,\r\n        payload: repos\r\n    }\r\n}\r\n","C:\\Git\\react-tests\\src\\redux\\utils\\api.js",[],"C:\\Git\\react-tests\\src\\redux\\root-saga.ts",[],"C:\\Git\\react-tests\\src\\redux\\sagas\\github-repos.ts",[],"C:\\Git\\react-tests\\src\\redux\\reducers\\req-status.ts",[],"C:\\Git\\react-tests\\src\\redux\\root-action.ts",[],["85","86"],"C:\\Git\\react-tests\\src\\redux\\types\\github-repos.ts",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":5,"column":9,"nodeType":"93","messageId":"94","endLine":5,"endColumn":26},{"ruleId":"91","severity":1,"message":"95","line":2,"column":9,"nodeType":"93","messageId":"94","endLine":2,"endColumn":36},{"ruleId":"91","severity":1,"message":"96","line":2,"column":38,"nodeType":"93","messageId":"94","endLine":2,"endColumn":52},{"ruleId":"91","severity":1,"message":"97","line":3,"column":9,"nodeType":"93","messageId":"94","endLine":3,"endColumn":24},{"ruleId":"98","severity":1,"message":"99","line":20,"column":20,"nodeType":"100","messageId":"101","endLine":20,"endColumn":80},{"ruleId":"91","severity":1,"message":"102","line":1,"column":9,"nodeType":"93","messageId":"94","endLine":1,"endColumn":13},{"ruleId":"91","severity":1,"message":"103","line":1,"column":15,"nodeType":"93","messageId":"94","endLine":1,"endColumn":18},{"ruleId":"91","severity":1,"message":"104","line":2,"column":9,"nodeType":"93","messageId":"94","endLine":2,"endColumn":46},{"ruleId":"91","severity":1,"message":"105","line":3,"column":9,"nodeType":"93","messageId":"94","endLine":3,"endColumn":41},{"ruleId":"87","replacedBy":"106"},{"ruleId":"89","replacedBy":"107"},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"@typescript-eslint/no-unused-vars","'githubReposTProps' is defined but never used.","Identifier","unusedVar","'InitialStateGithubReposType' is defined but never used.","'REDUCER_ACTION' is defined but never used.","'combineReducers' is defined but never used.","@typescript-eslint/consistent-type-assertions","Use 'as GithubReposState' instead of '<GithubReposState>'.","TSTypeAssertion","as","'call' is defined but never used.","'put' is defined but never used.","'ACTIONS_GET_ORGANIZATION_REPOSITORIES' is defined but never used.","'fetchOrganizationRepositoriesApi' is defined but never used.",["108"],["109"],"no-global-assign","no-unsafe-negation"]