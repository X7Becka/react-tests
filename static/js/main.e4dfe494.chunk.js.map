{"version":3,"sources":["redux/types/github-repos.ts","redux/actions/github-repos.ts","assets/svg/index.tsx","pages/github-repos/github-repos-item.tsx","pages/github-repos/github-repos-list.tsx","components/data-input/custom-input.tsx","utils/utils.ts","components/buttons/custom-pagination.tsx","pages/github-repos/github-repos.tsx","redux/containers/github-repos/with-github-repos.tsx","pages/math/math-matrix.tsx","pages/math/math-brackets.tsx","pages/math/math.tsx","components/buttons/custom-button.tsx","components/common/menu.tsx","layouts/main-layout.tsx","redux/reducers/github-repos.ts","redux/types/req-status.ts","redux/reducers/req-status.ts","redux/root-reducer.ts","redux/utils/api.ts","redux/actions/req-status.ts","redux/sagas/github-repos.ts","redux/root-saga.ts","redux/store.ts","redux/containers/common/request-loader.tsx","index.js"],"names":["FETCH_ORGANIZATION_REPOSITORIES","RECEIVE_ORGANIZATION_REPOSITORIES","UPDATE_PAGINATION","receiveOrganizationRepositoriesAction","repos","type","actions","payload","updatePaginationAction","pagination","StarSvg","className","onClick","xmlns","version","x","y","viewBox","fill","d","ForkSvg","id","WatchersSvg","GithubReposItem","this","props","repoItem","href","svn_url","target","rel","stargazers_count","forks","watchers","name","React","PureComponent","GithubReposList","list","reposList","map","repo","CustomInput","onInput","isLoading","label","value","reference","variant","FormControl","classes","root","InputLabel","Input","focused","ref","githubAPIv3PaginationParser","link","length","Error","split","line","match","query","URL","url","num","Number","page","reduce","acc","CustomPagination","count","onChange","isHidden","Pagination","GithubRepos","state","searchQuery","handleSearch","event","organization","setState","searchRepositories","handlePagination","githubRepos","isFetchingRepos","_","debounce","resultsMessage","repositoryList","lastPage","e","last","prev","resultsLength","undefined","val","textForms","n","Math","abs","n1","numToStr","GithubReposContainer","render","reqStatus","a","fetchOrganizationRepositories","withGithubRepos","connect","store","dispatch","MathMatrix","generate2DArray","arr","currentCount","rowStart","rowEnd","rows","colStart","colEnd","columns","i","twoDimensionalArray","handleDimensions","placeholder","matrix","row","index","rowItem","item","MathBrackets","isBracketStructureValid","expression","brackets","bin","symbol","bracketIndex","indexOf","push","pop","CustomButton","children","to","component","disabled","Button","Menu","_urls","buttons","Link","location","pathname","withRouter","MainLayout","path","initialState","REQ_STATUS","rootReducer","combineReducers","action","axios","options","AXIOS","get","catch","errorHandler","error","response","status","console","log","fetchOrganizationRepositoriesApi","reqStatusAction","watchGetOrganizationRepositories","callGetOrganizationRepositories","takeEvery","types","put","call","headers","data","rootSaga","all","sagaMiddleware","createSagaMiddleware","configureStore","createStore","composeWithDevTools","applyMiddleware","logger","run","RequestLoader","mounted","componentDidMount","join","RequestLoaderContainer","theme","createMuiTheme","MaterialTheme","history","createHistory","ReactDOM","StrictMode","ThemeProvider","document","querySelector"],"mappings":"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","file":"static/js/main.e4dfe494.chunk.js","sourcesContent":["export const FETCH_ORGANIZATION_REPOSITORIES = 'githubRepos/FETCH_ORGANIZATION_REPOSITORIES'\r\nexport type FetchReposAction = {\r\n    type: typeof FETCH_ORGANIZATION_REPOSITORIES\r\n    payload: {\r\n        organization: string\r\n        page: number\r\n    }\r\n}\r\n\r\nexport const RECEIVE_ORGANIZATION_REPOSITORIES = 'githubRepos/RECEIVE_ORGANIZATION_REPOSITORIES'\r\nexport type ReceiveReposAction = {\r\n    type: typeof RECEIVE_ORGANIZATION_REPOSITORIES\r\n    payload: Array<GithubReposTItem>\r\n}\r\n\r\nexport const UPDATE_PAGINATION = 'githubRepos/UPDATE_PAGINATION'\r\nexport type UpdatePaginationAction = {\r\n    type: typeof UPDATE_PAGINATION\r\n    payload?: GithubReposTPagination\r\n}\r\n\r\nexport type GithubReposActions =\r\n    | FetchReposAction\r\n    | ReceiveReposAction\r\n    | UpdatePaginationAction\r\n\r\n\r\n\r\nexport type GithubReposTItem = {\r\n    id: number\r\n    name: string\r\n    git_url: string\r\n    forks: number\r\n    watchers: number\r\n    stargazers_count: number\r\n    url: string\r\n    svn_url: string\r\n}\r\n\r\nexport type GithubReposTPagination <URL = string, NUM = number> = {\r\n    last: {\r\n        url: URL\r\n        num: NUM\r\n    }\r\n    next?: {\r\n        url: URL\r\n        num: NUM\r\n    }\r\n    prev?: {\r\n        url: URL\r\n        num: NUM\r\n    }\r\n}\r\n","import * as actions from '../types/github-repos'\r\n\r\nexport function fetchOrganizationRepositoriesAction<P extends actions.FetchReposAction['payload']>(organization: P['organization'], page: P['page']): actions.FetchReposAction {\r\n    return {\r\n        type: actions.FETCH_ORGANIZATION_REPOSITORIES,\r\n        payload: {\r\n            organization,\r\n            page\r\n        }\r\n    }\r\n}\r\n\r\nexport function receiveOrganizationRepositoriesAction(repos: actions.ReceiveReposAction['payload']): actions.ReceiveReposAction {\r\n    return {\r\n        type: actions.RECEIVE_ORGANIZATION_REPOSITORIES,\r\n        payload: repos\r\n    }\r\n}\r\n\r\nexport function updatePaginationAction(pagination: actions.UpdatePaginationAction['payload']): actions.UpdatePaginationAction {\r\n    return {\r\n        type: actions.UPDATE_PAGINATION,\r\n        payload: pagination\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\ntype SvgTProps = {\r\n    className?: string\r\n    onClick?: any\r\n}\r\n\r\nexport const StarSvg = ({className, onClick}: SvgTProps): JSX.Element => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/1999/xlink\"\r\n            version=\"1.1\"\r\n            x=\"0px\"\r\n            y=\"0px\"\r\n            viewBox=\"0 0 47.94 47.94\"\r\n            className={className}\r\n            onClick={onClick}\r\n        >\r\n            <path fill=\"currentColor\"\r\n                d=\"M26.285,2.486l5.407,10.956c0.376,0.762,1.103,1.29,1.944,1.412l12.091,1.757  c2.118,0.308,2.963,2.91,1.431,4.403l-8.749,8.528c-0.608,0.593-0.886,1.448-0.742,2.285l2.065,12.042  c0.362,2.109-1.852,3.717-3.746,2.722l-10.814-5.685c-0.752-0.395-1.651-0.395-2.403,0l-10.814,5.685  c-1.894,0.996-4.108-0.613-3.746-2.722l2.065-12.042c0.144-0.837-0.134-1.692-0.742-2.285l-8.749-8.528  c-1.532-1.494-0.687-4.096,1.431-4.403l12.091-1.757c0.841-0.122,1.568-0.65,1.944-1.412l5.407-10.956  C22.602,0.567,25.338,0.567,26.285,2.486z\"\r\n            />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport const ForkSvg = ({className, onClick}: SvgTProps): JSX.Element => {\r\n    return (\r\n        <svg version=\"1.1\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            x=\"0px\"\r\n            y=\"0px\"\r\n            viewBox=\"0 0 512 512\"\r\n            className={className}\r\n            onClick={onClick}\r\n        >\r\n            <g id=\"XMLID_2_\">\r\n                <path id=\"XMLID_8_\"\r\n                    fill=\"currentColor\"\r\n                    d=\"M181.8,448c0-8.5-3.4-16.2-9.4-23c-6-6.8-13.7-9.4-23-9.4s-16.2,3.4-23,9.4c-6,6-9.4,13.7-9.4,23s3.4,16.2,9.4,23c6,6,13.7,9.4,23,9.4s16.2-3.4,23-9.4S181.8,456.5,181.8,448z M181.8,64c0-8.5-3.4-16.2-9.4-23c-6-6-13.7-9.4-23-9.4s-16.2,3.4-23,9.4c-6,6-9.4,13.7-9.4,23c0,8.5,3.4,16.2,9.4,23c6,6,13.7,9.4,23,9.4s16.2-3.4,23-9.4C179.2,81.1,181.8,72.5,181.8,64z M395.1,106.7c0-8.5-3.4-16.2-9.4-23c-6-6.8-13.7-9.4-23-9.4s-16.2,3.4-23,9.4c-6.8,6-9.4,13.7-9.4,23s3.4,16.2,9.4,23c6,6,13.7,9.4,23,9.4s16.2-3.4,23-9.4C391.7,122.9,395.1,115.2,395.1,106.7z M426.7,106.7c0,11.9-2.6,22.2-8.5,32.4s-13.7,17.9-23,23c-0.9,64-25.6,110.1-75.1,138.2c-15.4,8.5-37.5,17.1-67.4,27.3c-28.2,8.5-46.9,17.1-56.3,23.9c-9.4,6.8-13.7,17.9-13.7,33.3v8.5c9.4,6,17.9,13.7,23,23c5.1,9.4,8.5,20.5,8.5,32.4c0,17.9-6,33.3-18.8,45.2S167.3,512,149.3,512s-33.3-6-45.2-18.8c-11.9-12.8-18.8-27.3-18.8-45.2c0-11.9,2.6-22.2,8.5-32.4c6-10.2,13.7-17.9,23-23V119.5c-9.4-6-17.9-13.7-23-23S85.3,75.9,85.3,64c0-17.9,6-33.3,18.8-45.2S131.4,0,149.3,0s33.3,6,45.2,18.8c11.9,12.8,18.8,27.3,18.8,45.2c0,11.9-2.6,22.2-8.5,32.4s-13.7,17.9-23,23V285c11.9-6,29-11.9,51.2-18.8c11.9-3.4,22.2-6.8,29-10.2c6.8-3.4,15.4-6,23.9-10.2s15.4-8.5,19.6-12.8s9.4-10.2,13.7-17.1s7.7-14.5,9.4-23c1.7-8.5,2.6-18.8,2.6-30.7c-9.4-6-17.9-13.7-23-23s-8.5-20.5-8.5-32.4c0-17.9,6-33.3,18.8-45.2c12.8-12.8,27.3-18.8,45.2-18.8s33.3,6,45.2,18.8C420.7,73.4,426.7,88.7,426.7,106.7z\"\r\n                />\r\n            </g>\r\n        </svg>\r\n\r\n    )\r\n}\r\n\r\nexport const WatchersSvg = ({className, onClick}: SvgTProps): JSX.Element => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n            version=\"1.1\"\r\n            viewBox=\"0 0 512 512\"\r\n            className={className}\r\n            onClick={onClick}\r\n        >\r\n            <g>\r\n                <path fill=\"currentColor\"\r\n                    d=\"m496.4,243.1c-63.9-78.7-149.3-122.1-240.4-122.1-91.1,0-176.5,43.4-240.4,122.1-6.1,7.5-6.1,18.2 0,25.7 63.9,78.8 149.3,122.2 240.4,122.2 91.1,0 176.5-43.4 240.4-122.1 6.1-7.5 6.1-18.3 0-25.8zm-240.4,79.8c-36.9,0-66.9-30-66.9-66.9 0-36.9 30-66.9 66.9-66.9 36.9,0 66.9,30 66.9,66.9 0,36.9-30,66.9-66.9,66.9zm-197.8-66.9c37.8-42.2 82.9-71.1 131.5-84.9-25.2,19.7-41.5,50.4-41.5,84.9 0,34.4 16.2,65.1 41.5,84.9-48.6-13.8-93.6-42.7-131.5-84.9zm264.1,84.9c25.2-19.7 41.5-50.4 41.5-84.9 0-34.4-16.2-65.1-41.5-84.9 48.6,13.8 93.7,42.7 131.5,84.9-37.9,42.2-82.9,71.1-131.5,84.9z\"\r\n                />\r\n            </g>\r\n        </svg>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {GithubReposTItem} from '../../redux/types/github-repos'\r\nimport {ForkSvg, StarSvg, WatchersSvg} from '../../assets/svg'\r\n\r\nexport class GithubReposItem extends React.PureComponent <TProps> {\r\n    render(): JSX.Element {\r\n        const {className, repoItem} = this.props\r\n        return (\r\n            <div className={`${className} github-repos-item`}>\r\n                <a href={repoItem.svn_url}\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                    className=\"github-repos-item__wrapper\"\r\n                >\r\n                    <div className=\"github-repos-item__header\">\r\n                        <div className=\"github-repos-item__header-item\">\r\n                            <StarSvg className=\"github-repos-item__icon github-repos-item__icon--star\"/>\r\n                            {repoItem.stargazers_count}\r\n                        </div>\r\n                        <div className=\"github-repos-item__header-item\">\r\n                            <ForkSvg className=\"github-repos-item__icon github-repos-item__icon--fork\"/>\r\n                            {repoItem.forks}\r\n                        </div>\r\n                        <div className=\"github-repos-item__header-item\">\r\n                            <WatchersSvg className=\"github-repos-item__icon github-repos-item__icon--watchers\"/>\r\n                            {repoItem.watchers}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"github-repos-item__body\">\r\n                        <div className=\"github-repos-item__name\">\r\n                            {repoItem.name}\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\ntype TProps = {\r\n    repoItem: GithubReposTItem\r\n    className: string\r\n}\r\n","import React from 'react'\r\nimport {GithubReposItem} from './github-repos-item'\r\nimport {GithubReposTItem} from '../../redux/types/github-repos'\r\nimport {Scrollbar} from 'react-scrollbars-custom'\r\n\r\nexport class GithubReposList extends React.PureComponent <TProps> {\r\n    render(): JSX.Element {\r\n        const {className} = this.props\r\n\r\n        return (\r\n            <div className={`${className} github-repos-list`}>\r\n                <Scrollbar>\r\n                    {this.list}\r\n                </Scrollbar>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    get list(): JSX.Element[] {\r\n        return this.props.reposList.map(repo => {\r\n            return (\r\n                <GithubReposItem repoItem={repo}\r\n                    key={repo.id}\r\n                    className=\"github-repos-list__item\"\r\n                />\r\n            )\r\n        })\r\n    }\r\n}\r\n\r\ntype TProps = {\r\n    reposList: GithubReposTItem[]\r\n    className: string\r\n}\r\n","import React, {FormEventHandler} from 'react'\r\nimport Input from '@material-ui/core/Input'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\n\r\nexport class CustomInput extends React.PureComponent <TProps> {\r\n    render(): JSX.Element {\r\n        const {className, onInput, isLoading, label, value, reference} = this.props\r\n        const props: TProps = {\r\n            className: `${className} ${isLoading && 'custom-input__loading'}`,\r\n            variant: 'standard',\r\n            onInput,\r\n            value,\r\n        }\r\n        return (\r\n            <FormControl classes={{root: 'custom-input'}}>\r\n                <InputLabel classes={{root: 'custom-input__label'}}>{label}</InputLabel>\r\n                <Input classes={{root: 'custom-input__input', focused: 'custom-input__input--focused'}}\r\n                    {...props}\r\n                    ref={reference}\r\n                />\r\n            </FormControl>\r\n        )\r\n    }\r\n}\r\n\r\ntype TProps = {\r\n    className: string\r\n    onInput?: FormEventHandler<HTMLDivElement>\r\n    isLoading?: boolean\r\n    label?: string\r\n    variant?: 'standard' | 'filled' | 'outlined',\r\n    value?: string | number\r\n    reference?: any\r\n}\r\n","import URL from 'url-parse'\r\nimport {GithubReposTPagination} from '../redux/types/github-repos'\r\n\r\nexport const numToStr = (val: number, textForms: string[]): string => {\r\n    // textForms: [\"час\", \"часа\", \"часов\"]\r\n    const n = Math.abs(val) % 100\r\n    const n1 = val % 10\r\n\r\n    if (n > 10 && n < 20) {\r\n        return textForms[2]\r\n    }\r\n    if (n1 > 1 && n1 < 5) {\r\n        return textForms[1]\r\n    }\r\n    if (n1 === 1) {\r\n        return textForms[0]\r\n    }\r\n    return textForms[2]\r\n}\r\n\r\nexport const githubAPIv3PaginationParser = (link: string): any => {\r\n    if (link.length === 0) {\r\n        throw new Error('link is not valid string')\r\n    }\r\n\r\n    const lines = link.split(',')\r\n    const matches = lines.map((line) => {\r\n        const match = line.match(/<(.+?)>; rel=\"(.+?)\"/)\r\n        if (match === null) {\r\n            throw new Error('link is not valid string')\r\n        }\r\n\r\n        const {query} = new URL(match[1], true)\r\n        return {\r\n            url: match[1],\r\n            type: match[2],\r\n            num: Number(query.page),\r\n        }\r\n    })\r\n\r\n    return matches.reduce(\r\n        (acc, value) => ({\r\n            ...acc,\r\n            [value.type]: {\r\n                url: value.url,\r\n                num: value.num,\r\n            },\r\n        }),\r\n        {},\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Pagination} from '@material-ui/core'\r\n\r\nexport class CustomPagination extends React.PureComponent <TProps> {\r\n    render(): JSX.Element | null {\r\n        const {className, count, onChange, isHidden} = this.props\r\n\r\n        const props: TProps = {\r\n            className: `${className} custom-pagination custom-pagination__wrapper`,\r\n            count,\r\n            onChange\r\n        }\r\n\r\n        return isHidden ? null : <Pagination {...props} />\r\n    }\r\n}\r\n\r\ntype TProps = {\r\n    className: string\r\n    count?: number,\r\n    onChange: (event: object, page: number) => void\r\n    isHidden?: boolean\r\n}\r\n","import React from 'react'\r\nimport {GithubReposEnhancedTProps, GithubReposEnhancedTState} from '../../redux/containers/github-repos/with-github-repos'\r\nimport {GithubReposList} from './github-repos-list'\r\nimport {CustomInput} from '../../components/data-input/custom-input'\r\nimport _ from 'lodash'\r\nimport {numToStr} from '../../utils/utils'\r\nimport {CustomPagination} from '../../components/buttons/custom-pagination'\r\n\r\nexport class GithubRepos extends React.PureComponent<GithubReposEnhancedTProps, GithubReposEnhancedTState> {\r\n\r\n    state = {\r\n        searchQuery: ''\r\n    }\r\n\r\n    // private currentOrganization: React.RefObject<HTMLDivElement> = React.createRef()\r\n\r\n    render(): JSX.Element {\r\n        const {githubRepos, isFetchingRepos} = this.props\r\n\r\n\r\n        return (\r\n            <div className=\"github-repos\">\r\n                <div className=\"github-repos__header\">\r\n                    <h1 className=\"github-repos__title\">Repository search</h1>\r\n                    <div className=\"github-repos__input-wrapper\">\r\n                        <CustomInput\r\n                            onInput={_.debounce(this.handleSearch, 1000)}\r\n                            className=\"github-repos__input\"\r\n                            isLoading={isFetchingRepos}\r\n                            label=\"Repository name\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"github-repos__results-counter\">\r\n                        {this.resultsMessage}\r\n                    </div>\r\n                </div>\r\n                <GithubReposList className=\"github-repos__list\"\r\n                    reposList={githubRepos.repositoryList || []}\r\n                />\r\n                <CustomPagination className=\"github-repos__pagination\"\r\n                    count={this.lastPage}\r\n                    onChange={(e, page) => this.handlePagination(page)}\r\n                    isHidden={!githubRepos.pagination}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleSearch = (event: React.SyntheticEvent): void => {\r\n        const organization = (event?.target as HTMLInputElement).value\r\n        this.setState({searchQuery: organization}, () => this.props.searchRepositories(this.state.searchQuery, 1))\r\n\r\n    }\r\n\r\n    handlePagination = (page: number): void => {\r\n        this.props.searchRepositories(this.state.searchQuery, page)\r\n    }\r\n\r\n    get lastPage() {\r\n        const {githubRepos} = this.props\r\n        const last = githubRepos.pagination?.last\r\n        const prev = githubRepos.pagination?.prev\r\n\r\n        if (githubRepos.pagination && last) return last.num\r\n        if (!last && prev) return prev.num + 1\r\n        return 1\r\n    }\r\n\r\n    get resultsMessage(): string {\r\n        const resultsLength = this.props.githubRepos.repositoryList?.length\r\n\r\n        if (resultsLength === undefined) {\r\n            return 'Let\\'s search'\r\n        } else if (resultsLength > 0) {\r\n            return `Found ${resultsLength} ${numToStr(resultsLength, ['repository', 'repositories', 'repositories'])}`\r\n        } else {\r\n            return 'Nothing found :('\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../../actions/github-repos'\r\nimport * as types from '../../types/github-repos'\r\nimport {GithubReposActions} from '../../types/github-repos'\r\nimport {RootState} from '../../root-reducer'\r\nimport {Dispatch} from 'redux'\r\nimport {RouteComponentProps} from 'react-router'\r\nimport {GithubRepos} from '../../../pages/github-repos/github-repos'\r\nimport {ReqStatusState} from '../../reducers/req-status'\r\nimport {ReqStatusActions} from '../../types/req-status'\r\nimport {GithubReposState} from '../../reducers/github-repos'\r\n\r\nexport type GithubReposEnhancedTProps = {\r\n    githubRepos: GithubReposState\r\n    reqStatus: ReqStatusState\r\n    searchRepositories: <P extends types.FetchReposAction['payload']>(organization: P['organization'], page: P['page']) => void\r\n    isFetchingRepos: boolean\r\n}\r\n\r\nexport type GithubReposEnhancedTState = {\r\n    searchQuery: string\r\n}\r\n\r\ntype TProps = ReturnType<typeof mapDispatchToProps> & ReturnType<typeof mapStateToProps> & RouteComponentProps\r\n\r\n\r\nclass GithubReposContainer extends React.PureComponent <TProps> {\r\n    isFetchingRepos = false\r\n\r\n    render = () => {\r\n        const {githubRepos, reqStatus} = this.props\r\n        const props = {\r\n            githubRepos,\r\n            reqStatus,\r\n            searchRepositories: this.searchRepositories,\r\n            isFetchingRepos: this.isFetchingRepos\r\n        }\r\n\r\n        return <GithubRepos {...props} />\r\n    }\r\n\r\n    searchRepositories = async <P extends types.FetchReposAction['payload']>(organization: P['organization'], page: P['page']) => {\r\n        const {fetchOrganizationRepositories} = this.props\r\n        this.isFetchingRepos = true\r\n        await fetchOrganizationRepositories(organization, page)\r\n        this.isFetchingRepos = false\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<GithubReposActions | ReqStatusActions>) => {\r\n    return {\r\n        fetchOrganizationRepositories: <P extends types.FetchReposAction['payload']>(organization: P['organization'], page: P['page']) => dispatch(actions.fetchOrganizationRepositoriesAction(organization, page))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store: RootState) => {\r\n    return {\r\n        reqStatus: store.reqStatus,\r\n        githubRepos: store.githubRepos\r\n    }\r\n}\r\n\r\nexport const withGithubRepos = connect(mapStateToProps, mapDispatchToProps)(GithubReposContainer)\r\n\r\n","/**\r\n * Test data provided with specified rows\\columns.\r\n * Matrix doesn't work with \"Exponent\" and \"-\" symbol that provided by default input \"type=number\" directive. To beat it we should use something like IMask.\r\n * Also matrix doesn't work with just single row or column. That's it.\r\n */\r\n\r\nimport React from 'react'\r\n\r\nexport class MathMatrix extends React.PureComponent<Record<string, never>, IState> {\r\n    constructor(props: Record<string, never>) {\r\n        super(props)\r\n        this.state = {\r\n            twoDimensionalArray: undefined,\r\n            rows: 4,\r\n            columns: 6\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Mounting component and immediately generating demo-matrix that further will free to change.\r\n     */\r\n    componentDidMount(): void {\r\n        this.generate2DArray()\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {rows, columns} = this.state\r\n\r\n        return (\r\n            <div className=\"math-matrix\">\r\n                <div className=\"math-matrix__form\">\r\n                    <input type=\"number\"\r\n                        placeholder=\"rows\"\r\n                        value={rows}\r\n                        onChange={this.handleDimensions('rows')}\r\n                    />\r\n                    <input type=\"number\"\r\n                        placeholder=\"columns\"\r\n                        value={columns}\r\n                        onChange={this.handleDimensions('columns')}\r\n                    />\r\n                    <button onClick={() => this.generate2DArray()}>Generate matrix</button>\r\n                </div>\r\n                {this.matrix}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    generate2DArray = (): void => {\r\n        const {rows, columns} = this.state\r\n        const arr: Array<Array<number>> = []\r\n        let currentCount = 1\r\n        let rowStart = 0\r\n        let rowEnd = rows - 1\r\n        let colStart = 0\r\n        let colEnd = columns - 1\r\n\r\n        while (rowStart <= rowEnd && colStart <= colEnd) {\r\n            /**\r\n             * Generating first-top row\r\n             */\r\n            for (let i = colStart; i <= colEnd; i++) {\r\n                arr[rowStart] = arr[rowStart] || []\r\n                arr[rowStart][i] = currentCount\r\n                currentCount++\r\n            }\r\n            rowStart++\r\n\r\n            /**\r\n             * Generating cols from right to left\r\n             */\r\n            for (let i = rowStart; i <= rowEnd; i++) {\r\n                arr[i] = arr[i] || []\r\n                arr[i][colEnd] = currentCount\r\n                currentCount++\r\n            }\r\n            colEnd--\r\n\r\n            /**\r\n             * Making the bottom row\r\n             */\r\n            for (let i = colEnd; i >= colStart; i--) {\r\n                arr[rowEnd][i] = currentCount\r\n                currentCount++\r\n            }\r\n            rowEnd--\r\n\r\n            /**\r\n             * Generating from botom to top\r\n             */\r\n            for (let i = rowEnd; i >= rowStart; i--) {\r\n                arr[i][colStart] = currentCount\r\n                currentCount++\r\n            }\r\n            colStart++\r\n        }\r\n        /**\r\n         * Finally after assigning numbers and build matrix we setting state\r\n         */\r\n        this.setState({twoDimensionalArray: arr})\r\n    }\r\n\r\n    /**\r\n     * getter that computes and render matrix right after we invoke \"Generate2DArray\".\r\n     */\r\n    get matrix(): JSX.Element {\r\n        const {twoDimensionalArray} = this.state\r\n        const rows = twoDimensionalArray?.map((row, index) => {\r\n            const rowItem = row.map((item, index) => {\r\n                return (\r\n                    <div key={index}\r\n                        className=\"math-matrix__matrix-item\"\r\n                    >{item}</div>\r\n                )\r\n            })\r\n            return (\r\n                <div key={index}\r\n                    className=\"math-matrix__matrix-row\"\r\n                >\r\n                    {rowItem}\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className=\"math-matrix__matrix-wrapper\">\r\n                {rows}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param type accepts only two types: rows and columns.\r\n     */\r\n    handleDimensions = (type: 'rows' | 'columns') => (e: React.SyntheticEvent): void => {\r\n        this.setState({[type]: (e.target as HTMLTextAreaElement).value} as unknown as Pick<IState, keyof IState>)\r\n    }\r\n}\r\n\r\ninterface IState {\r\n    twoDimensionalArray?: Array<Array<number>>\r\n    rows: number,\r\n    columns: number\r\n}\r\n","import React from 'react'\r\n\r\nexport class MathBrackets extends React.PureComponent {\r\n    render(): JSX.Element {\r\n        return (\r\n            <div className=\"math-expression\">\r\n                <div className=\"math-expression__title\">Expression-balance checking</div>\r\n                {this.isBracketStructureValid('(({{1+3}[4+<3-5>]))', '(){}[]')}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // isBracketStructureValid = (expression: string) => {\r\n    // const brackets = [\"(\", \")\", \"{\", \"}\", \"[\", \"]\"]\r\n    // let isFound = true\r\n    // for (let i = 0; i < expression.length - 1;i++) {\r\n    //         switch (Array.from(expression)[i]) {\r\n    //             case \"(\": {\r\n    //                 for (let symbol = i; symbol < expression.length - i;symbol++) {\r\n    //                     isFound = false\r\n    //                     if (Array.from(expression)[symbol] === \")\") isFound = true\r\n    //                 }\r\n    //             }\r\n    //         }\r\n    //     console.log(!isFound ? 'ERR' : \"!ERR\", '!isFound')\r\n    //\r\n    // }\r\n    // }\r\n    /**\r\n     * @param expression\r\n     * @param brackets\r\n     */\r\n    isBracketStructureValid = (expression: string, brackets: string): string => {\r\n        /**\r\n         * Temporary array to contain open brackets\r\n         */\r\n        const bin = []\r\n        /**\r\n         * Here we passing an expression by every symbol\r\n         */\r\n        for (const symbol of expression) {\r\n            /**\r\n             * Getting an index of bracket.\r\n             * So if current symbol aren't equal any of bracket in parameter - we're getting the next symbol.\r\n             */\r\n            const bracketIndex = brackets.indexOf(symbol)\r\n            if (bracketIndex === -1) continue\r\n\r\n            /**\r\n             * Getting open-bracket. If so - we pushing close bracket (next to open)\r\n             */\r\n            if (bracketIndex % 2 === 0) bin.push(bracketIndex + 1)\r\n\r\n            /**\r\n             * Searching open-bracket. Popping off the last bracket in bin then compare it.\r\n             */\r\n            else if (bin.pop() !== bracketIndex) return `${expression} UNBALANCED.`\r\n        }\r\n        if (bin.length > 0) return `${expression} UNBALANCED.`\r\n        /**\r\n         * If bin are empty - brackets are equal\r\n         */\r\n        return `${expression} BALANCED.`\r\n    }\r\n}\r\n","import React from 'react'\r\nimport {MathMatrix} from './math-matrix'\r\nimport {MathBrackets} from './math-brackets'\r\n\r\nexport class Math extends React.PureComponent  {\r\n\r\n    render(): JSX.Element {\r\n        return (\r\n            <div className=\"math\">\r\n                <MathMatrix/>\r\n                <MathBrackets/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport class CustomButton extends React.PureComponent <TProps> {\r\n    render(): JSX.Element {\r\n        const {children, className, to, component, disabled} = this.props\r\n\r\n        const props: TProps = {\r\n            className: `${className} custom-button custom-button__wrapper`,\r\n            component,\r\n            to,\r\n            disabled,\r\n            type: 'reset'\r\n        }\r\n\r\n        return (\r\n            <Button {...props}>\r\n                {children}\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\ntype TProps = {\r\n    className: string\r\n    type?: 'button' | 'submit' | 'reset'\r\n    to?: string\r\n    component?: React.ElementType,\r\n    disabled?: boolean\r\n}\r\n","import React from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport {CustomButton} from '../buttons/custom-button'\r\nimport {RouteComponentProps} from 'react-router'\r\n\r\nclass Menu extends React.PureComponent<RouteComponentProps> {\r\n    private _urls: Array<{\r\n            url: string\r\n            label: string\r\n        }>\r\n\r\n    constructor(props: RouteComponentProps) {\r\n        super(props)\r\n        this._urls = [\r\n            {url: '/math', label: 'Математический тест'},\r\n            {url: '/github-repos', label: 'Работа с апи гитхаба'}\r\n        ]\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return (\r\n            <div className=\"menu\">\r\n                <div className=\"menu__links-wrapper\">\r\n                    {this.buttons}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    get buttons(): JSX.Element[] {\r\n        return this._urls.map(item => {\r\n            return (\r\n                <CustomButton key={item.url}\r\n                    className=\"menu__button\"\r\n                    component={Link}\r\n                    to={item.url}\r\n                    disabled={this.props.location.pathname === item.url}\r\n                >\r\n                    {item.label}\r\n                </CustomButton>\r\n            )\r\n        })\r\n    }\r\n}\r\n\r\nexport default withRouter(Menu)\r\n","import React from 'react'\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\r\nimport {withGithubRepos} from '../redux/containers/github-repos/with-github-repos'\r\nimport {Math} from '../pages/math/math'\r\nimport Menu from '../components/common/menu'\r\n\r\nexport class MainLayout extends React.PureComponent {\r\n    render(): JSX.Element {\r\n\r\n        return (\r\n            <div className=\"main-layout\">\r\n                <Router>\r\n                    <Menu />\r\n                    <div className=\"main-layout__content\">\r\n                        <Route path=\"/github-repos\"\r\n                            component={withGithubRepos}\r\n                        />\r\n                        <Route path=\"/math\"\r\n                            component={Math}\r\n                        />\r\n                    </div>\r\n                </Router>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import {GithubReposTItem, GithubReposTPagination} from '../types/github-repos'\r\nimport * as actions from './../types/github-repos'\r\nimport {Reducer} from 'redux'\r\n\r\nexport type GithubReposState = {\r\n    readonly repositoryList?: Array<GithubReposTItem>\r\n    readonly pagination?: GithubReposTPagination\r\n}\r\n\r\nconst initialState: GithubReposState = {\r\n    repositoryList: undefined,\r\n    pagination: undefined\r\n}\r\n\r\nexport const githubReposReducer: Reducer<GithubReposState, actions.GithubReposActions> = (state = initialState, action) => {\r\n    switch (action.type) {\r\n    case actions.RECEIVE_ORGANIZATION_REPOSITORIES: {\r\n        return {...state, repositoryList: action.payload}\r\n    }\r\n\r\n    case actions.UPDATE_PAGINATION: {\r\n        return {...state, pagination: action.payload}\r\n    }\r\n    default: return state\r\n    }\r\n}\r\n","export const REQ_STATUS = 'reqStatus/REQ_STATUS'\r\nexport type ReqStatusAction = {\r\n    type: typeof REQ_STATUS\r\n    payload: 'complete' | 'loading' | 'error'\r\n}\r\n\r\nexport type ReqStatusActions =\r\n    | ReqStatusAction\r\n","import * as actions from '../types/req-status'\r\nimport {Reducer} from 'redux'\r\n\r\nexport type ReqStatusState = {\r\n    readonly state: 'complete' | 'loading' | 'error',\r\n}\r\n\r\nconst initialState: ReqStatusState = {\r\n    state: 'complete'\r\n}\r\n\r\nexport const reqStatusReducer: Reducer<ReqStatusState, actions.ReqStatusActions> = (state = initialState, action) => {\r\n    switch (action.type) {\r\n    case actions.REQ_STATUS:\r\n        return {...state, state: action.payload}\r\n\r\n    default: return state\r\n    }\r\n}\r\n","import {combineReducers} from 'redux'\r\n\r\nimport {githubReposReducer, GithubReposState} from './reducers/github-repos'\r\nimport {reqStatusReducer, ReqStatusState} from './reducers/req-status'\r\n\r\nexport const rootReducer = combineReducers<RootState>({\r\n    githubRepos: githubReposReducer,\r\n    reqStatus: reqStatusReducer,\r\n})\r\n\r\n\r\n// export type RootState = ReturnType<typeof rootReducer>\r\nexport type RootState = {\r\n    githubRepos: GithubReposState\r\n    reqStatus: ReqStatusState\r\n}\r\n\r\n\r\n// type kek<T> = T extends CombinedState<infer R> ? R : never\r\n//\r\n// export type State = kek<RootState>\r\n","import AXIOS, {AxiosResponse} from 'axios'\r\nimport {GithubReposTItem} from '../types/github-repos'\r\n\r\nconst api = 'https://api.github.com'\r\n\r\ntype RequestTypes<URL = string, Options = Record<string, unknown>, Data = Record<string, unknown>> = {\r\n    get: (url: URL, options?: Options) => Promise<void | AxiosResponse>\r\n    post: (url: URL, data: Data, options?: Options) => Promise<void | AxiosResponse>\r\n    patch: (url: URL, data: Data, options?: Options) => Promise<void | AxiosResponse>\r\n    put: (url: URL, data: Data, options?: Options) => Promise<void | AxiosResponse>\r\n    delete: (url: URL, options?: Options) => Promise<void | AxiosResponse>\r\n}\r\n\r\nexport const axios: RequestTypes = {\r\n    get: (url, options) => AXIOS.get(url, options).catch(errorHandler),\r\n    post: (url, data, options) => AXIOS.post(url, data, options).catch(errorHandler),\r\n    patch: (url, data, options) => AXIOS.patch(url, data, options).catch(errorHandler),\r\n    put: (url, data, options) => AXIOS.put(url, data, options).catch(errorHandler),\r\n    delete: (url, options) => AXIOS.delete(url, options).catch(errorHandler)\r\n}\r\n\r\nfunction errorHandler(error: {response: {status: number}}) {\r\n    const status = error.response ? error.response.status : undefined\r\n    switch (status) {\r\n    case 401: {\r\n        console.log('err 401')\r\n        break\r\n    }\r\n    default: console.log('OK')\r\n    }\r\n    throw error\r\n}\r\n\r\nexport function fetchOrganizationRepositoriesApi(organization: string, page: number): Promise<void | AxiosResponse<GithubReposTItem[]>> {\r\n    return axios.get(`${api}/orgs/${organization}/repos?page=${page}`)\r\n}\r\n","import * as actions from '../types/req-status'\r\n\r\nexport function reqStatusAction(state: actions.ReqStatusAction['payload']): actions.ReqStatusAction {\r\n    return {\r\n        type: actions.REQ_STATUS,\r\n        payload: state\r\n    }\r\n}\r\n","import {call, put, takeEvery} from 'redux-saga/effects'\r\nimport {fetchOrganizationRepositoriesApi} from '../utils/api'\r\nimport {receiveOrganizationRepositoriesAction, updatePaginationAction} from '../actions/github-repos'\r\nimport * as types from '../types/github-repos'\r\nimport {reqStatusAction} from '../actions/req-status'\r\nimport {githubAPIv3PaginationParser} from '../../utils/utils'\r\n\r\nexport function* watchGetOrganizationRepositories() {\r\n    yield takeEvery(types.FETCH_ORGANIZATION_REPOSITORIES, callGetOrganizationRepositories)\r\n}\r\n\r\nfunction* callGetOrganizationRepositories({payload}: types.FetchReposAction) {\r\n    try {\r\n        yield put(reqStatusAction('loading'))\r\n        const response = yield call(fetchOrganizationRepositoriesApi, payload.organization, payload.page)\r\n        yield put(updatePaginationAction(githubAPIv3PaginationParser(response.headers.link)))\r\n        yield put(receiveOrganizationRepositoriesAction(response.data))\r\n        yield put(reqStatusAction('complete'))\r\n    } catch(error) {\r\n        console.log(error, 'error')\r\n        yield put(reqStatusAction('error'))\r\n        yield put(updatePaginationAction(undefined))\r\n        yield put(receiveOrganizationRepositoriesAction([]))\r\n    }\r\n}\r\n","import {all, call} from 'redux-saga/effects'\r\nimport {watchGetOrganizationRepositories} from './sagas/github-repos'\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        call(watchGetOrganizationRepositories)\r\n    ])\r\n}\r\n","import {applyMiddleware, createStore} from 'redux'\r\nimport {logger} from 'redux-logger'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport {rootReducer} from './root-reducer'\r\nimport rootSaga from './root-saga'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nconst configureStore = () => {\r\n    const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware, logger)))\r\n    sagaMiddleware.run(rootSaga)\r\n    return store\r\n}\r\n\r\nexport default configureStore\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {RootState} from '../../root-reducer'\r\n\r\ntype TProps = ReturnType<typeof mapStateToProps>\r\n\r\nclass RequestLoader extends React.PureComponent <TProps> {\r\n    mounted = false;\r\n\r\n    componentDidMount = () => {\r\n        if (!this.mounted) this.mounted = true\r\n    }\r\n\r\n    render = () => {\r\n        const {reqStatus} = this.props\r\n        const status = [\r\n            'request-loader__bar',\r\n            !this.mounted ? 'request-loader__bar--hidden' : '',\r\n            reqStatus?.state === 'loading' ? 'request-loader__bar--90' : 'request-loader__bar--100',\r\n            reqStatus?.state === 'error' ? 'request-loader__bar--error' : ''\r\n\r\n        ]\r\n        return (\r\n            <div className=\"request-loader\">\r\n                <div className={status.join(' ')}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store: RootState) => {\r\n    return {\r\n        reqStatus: store.reqStatus\r\n    }\r\n}\r\n\r\nexport const RequestLoaderContainer = connect(mapStateToProps)(RequestLoader)\r\n\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport '.'\nimport './index.scss'\nimport MaterialTheme from './assets/theme/material-theme.json'\n\nimport {MainLayout} from './layouts/main-layout'\n// import reportWebVitals from './report-web-vitals'\nimport {Provider} from 'react-redux'\nimport configureStore from './redux/store'\nimport {RequestLoaderContainer} from './redux/containers/common/request-loader'\nimport {createMuiTheme, ThemeProvider} from '@material-ui/core/styles'\nimport {Router} from 'react-router-dom'\nimport * as createHistory from 'history'\n\nconst store = configureStore()\nconst theme = createMuiTheme(MaterialTheme)\nconst history = createHistory.createBrowserHistory()\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router history={history}>\n            <RequestLoaderContainer />\n            <React.StrictMode>\n                <ThemeProvider theme={theme}>\n                    <MainLayout />\n                </ThemeProvider>\n            </React.StrictMode>\n        </Router>\n    </Provider>,\n    document.querySelector('#root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log)\n"],"sourceRoot":""}